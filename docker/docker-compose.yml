version: '2.1'

networks:
    extnetwork:
      ipam:
         config:
         - subnet: 192.168.0.0/24
           gateway: 192.168.0.1

services:
    monitor:
        image: chubaofs/cfs-base:1.4
        depends_on:
            - consul
            - prometheus
            - grafana
        networks:
            extnetwork:

    servers:
        image: chubaofs/cfs-base:1.4
        depends_on:
            - master1
            - master2
            - master3
            - metanode1
            - metanode2
            - metanode3
            - metanode4
            - datanode1
            - datanode2
            - datanode3
            - datanode4
            - flashnode1
            - flashnode2
            - flashnode3
            - objectnode1
            - objectnode2
            - objectnode3
            - ecnode1
            - ecnode2
            - ecnode3
            - ecnode4
            - ecnode5
            - ecnode6
            - ecnode7
            - codecnode1
            - codecnode2
            - codecnode3
            - console1
            - monitornode1
            - monitornode2
            - monitornode3
            - nginx
        networks:
            extnetwork:

    master1:
        image: chubaofs/cfs-base:1.4
        ports:
            - "5901"
            - "5902"
            - "17010"
            - "17020"
            - 9500
        volumes:
            - ${DiskPath:-./docker_data}/master1/data:/cfs/data
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/master1/log:/cfs/log
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage 
            - ./conf/master1.json:/cfs/conf/master.json
            - ./script/start_master.sh:/cfs/script/start.sh
        command: /cfs/bin/cfs-server -f -c /cfs/conf/master.json
        restart: on-failure
        privileged: true
        environment:
          - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.11

    master2:
        image: chubaofs/cfs-base:1.4
        ports:
            - "5901"
            - "5902"
            - "17010"
            - "17020"
            - 9500
        volumes:
            - ${DiskPath:-./docker_data}/master2/data:/cfs/data
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/master2/log:/cfs/log
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage 
            - ./conf/master2.json:/cfs/conf/master.json
            - ./script/start_master.sh:/cfs/script/start.sh
        command: /cfs/bin/cfs-server -f -c /cfs/conf/master.json
        restart: on-failure
        privileged: true
        environment:
          - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.12

    master3:
        image: chubaofs/cfs-base:1.4
        ports:
            - "5901"
            - "5902"
            - "17010"
            - "17020"
            - 9500
        volumes:
            - ${DiskPath:-./docker_data}/master3/data:/cfs/data
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/master3/log:/cfs/log
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage 
            - ./conf/master3.json:/cfs/conf/master.json
            - ./script/start_master.sh:/cfs/script/start.sh
        command: /cfs/bin/cfs-server -f -c /cfs/conf/master.json
        restart: on-failure
        privileged: true
        environment:
          - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.13

    metanode1:
        image: chubaofs/cfs-base:1.4
        ports:
            - "17210"
            - "17220"
            - "17230"
            - "17240"
            - 9500
        volumes:
            - ${DiskPath:-./docker_data}/metanode1/data:/cfs/data
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/metanode1/log:/cfs/log
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage 
            - ./conf/metanode.json:/cfs/conf/metanode.json
            - ./script/start_meta.sh:/cfs/script/start.sh
        command: /cfs/bin/cfs-server -f -c /cfs/conf/metanode.json
        restart: on-failure
        privileged: true
        environment:
          - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.21

    metanode2:
        image: chubaofs/cfs-base:1.4
        ports:
            - "17210"
            - "17220"
            - "17230"
            - "17240"
            - 9500
        volumes:
            - ${DiskPath:-./docker_data}/metanode2/data:/cfs/data
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/metanode2/log:/cfs/log
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage 
            - ./conf/metanode.json:/cfs/conf/metanode.json
            - ./script/start_meta.sh:/cfs/script/start.sh
        command: /cfs/bin/cfs-server -f -c /cfs/conf/metanode.json
        restart: on-failure
        privileged: true
        environment:
          - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.22

    metanode3:
        image: chubaofs/cfs-base:1.4
        ports:
            - "17210"
            - "17220"
            - "17230"
            - "17240"
            - 9500
        volumes:
            - ${DiskPath:-./docker_data}/metanode3/data:/cfs/data
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/metanode3/log:/cfs/log
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage 
            - ./conf/metanode.json:/cfs/conf/metanode.json
            - ./script/start_meta.sh:/cfs/script/start.sh
        command: /cfs/bin/cfs-server -f -c /cfs/conf/metanode.json
        restart: on-failure
        privileged: true
        environment:
          - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.23

    metanode4:
        image: chubaofs/cfs-base:1.4
        ports:
            - "17210"
            - "17220"
            - "17230"
            - "17240"
            - 9500
        volumes:
            - ${DiskPath:-./docker_data}/metanode4/data:/cfs/data
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/metanode4/log:/cfs/log
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage 
            - ./conf/metanode.json:/cfs/conf/metanode.json
            - ./script/start_meta.sh:/cfs/script/start.sh
        command: /cfs/bin/cfs-server -f -c /cfs/conf/metanode.json
        restart: on-failure
        privileged: true
        environment:
          - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.24

    datanode1:
        image: chubaofs/cfs-base:1.4
        ports:
            - "17310"
            - "17320"
            - "17330"
            - "17340"
            - 9500
        volumes:
            - ${DiskPath:-./docker_data}/datanode1/disk:/cfs/disk
            - ./bin:/cfs/bin:rw
            - ${DiskPath:-./docker_data}/datanode1/log:/cfs/log
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage 
            - ./conf/datanode.json:/cfs/conf/datanode.json
            - ./conf/dataAgent.json:/cfs/conf/dataAgent.json
            - ./script/start_dataagent.sh:/cfs/script/start_agent.sh
            - ./conf/hosts:/etc/hosts:ro
        command: /cfs/bin/cfs-server -f -c /cfs/conf/datanode.json
        restart: on-failure
        privileged: true
        environment:
          - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.31

    datanode2:
        image: chubaofs/cfs-base:1.4
        ports:
            - "17310"
            - "17320"
            - "17330"
            - "17340"
            - 9500
        volumes:
            - ${DiskPath:-./docker_data}/datanode2/disk:/cfs/disk
            - ./bin:/cfs/bin:rw
            - ${DiskPath:-./docker_data}/datanode2/log:/cfs/log
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage 
            - ./conf/datanode.json:/cfs/conf/datanode.json
            - ./conf/dataAgent.json:/cfs/conf/dataAgent.json
            - ./script/start_dataagent.sh:/cfs/script/start_agent.sh
            - ./conf/hosts:/etc/hosts:ro
        command: /cfs/bin/cfs-server -f -c /cfs/conf/datanode.json
        restart: on-failure
        privileged: true
        environment:
          - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.32

    datanode3:
        image: chubaofs/cfs-base:1.4
        ports:
            - "17310"
            - "17320"
            - "17330"
            - "17340"
            - 9500
        volumes:
            - ${DiskPath:-./docker_data}/datanode3/disk:/cfs/disk
            - ./bin:/cfs/bin:rw
            - ${DiskPath:-./docker_data}/datanode3/log:/cfs/log
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage 
            - ./conf/datanode.json:/cfs/conf/datanode.json
            - ./conf/dataAgent.json:/cfs/conf/dataAgent.json
            - ./script/start_dataagent.sh:/cfs/script/start_agent.sh
            - ./conf/hosts:/etc/hosts:ro
        command: /cfs/bin/cfs-server -f -c /cfs/conf/datanode.json
        restart: on-failure
        privileged: true
        environment:
          - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.33

    datanode4:
        image: chubaofs/cfs-base:1.4
        ports:
            - "17310"
            - "17320"
            - "17330"
            - "17340"
            - 9500
        volumes:
            - ${DiskPath:-./docker_data}/datanode4/disk:/cfs/disk
            - ./bin:/cfs/bin:rw
            - ${DiskPath:-./docker_data}/datanode4/log:/cfs/log
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage 
            - ./conf/datanode.json:/cfs/conf/datanode.json
            - ./conf/dataAgent.json:/cfs/conf/dataAgent.json
            - ./script/start_dataagent.sh:/cfs/script/start_agent.sh
            - ./conf/hosts:/etc/hosts:ro
        command: /cfs/bin/cfs-server -f -c /cfs/conf/datanode.json
        restart: on-failure
        privileged: true
        environment:
          - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.34

    flashnode1:
        image: chubaofs/cfs-base:1.4
        ports:
            - "17710"
            - "17720"
            - "17730"
            - "17740"
            - 9500
        volumes:
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/flashnode1/log:/cfs/log
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage
            - ./conf/flashnode.json:/cfs/conf/flashnode.json
            - ./conf/hosts:/etc/hosts:ro
        command: /cfs/bin/cfs-server -f -c /cfs/conf/flashnode.json
        restart: on-failure
        privileged: true
        environment:
            - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.121

    flashnode2:
        image: chubaofs/cfs-base:1.4
        ports:
            - "17710"
            - "17720"
            - "17730"
            - "17740"
            - 9500
        volumes:
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/flashnode2/log:/cfs/log
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage
            - ./conf/flashnode.json:/cfs/conf/flashnode.json
            - ./conf/hosts:/etc/hosts:ro
        command: /cfs/bin/cfs-server -f -c /cfs/conf/flashnode.json
        restart: on-failure
        privileged: true
        environment:
            - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.122

    flashnode3:
        image: chubaofs/cfs-base:1.4
        ports:
            - "17710"
            - "17720"
            - "17730"
            - "17740"
            - 9500
        volumes:
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/flashnode3/log:/cfs/log
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage
            - ./conf/flashnode.json:/cfs/conf/flashnode.json
            - ./conf/hosts:/etc/hosts:ro
        command: /cfs/bin/cfs-server -f -c /cfs/conf/flashnode.json
        restart: on-failure
        privileged: true
        environment:
            - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.123

    ecnode1:
        image: chubaofs/cfs-base:1.4
        ports:
            - "17510"
            - "17520"
            - "17530"
            - "17540"
            - 9500
        volumes:
            - ${DiskPath:-./docker_data}/ecnode1/disk:/cfs/disk
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/ecnode1/log:/cfs/log
            - ./conf/ecnode1.json:/cfs/conf/ecnode1.json
            - ./script/start_ecnode.sh:/cfs/script/start.sh
        command: /bin/sh /cfs/script/start.sh ecnode1.json
        restart: on-failure
        privileged: true
        environment:
            - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.51

    ecnode2:
        image: chubaofs/cfs-base:1.4
        ports:
            - "17510"
            - "17520"
            - "17530"
            - "17540"
            - 9500
        volumes:
            - ${DiskPath:-./docker_data}/ecnode2/disk:/cfs/disk
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/ecnode2/log:/cfs/log
            - ./conf/ecnode1.json:/cfs/conf/ecnode1.json
            - ./script/start_ecnode.sh:/cfs/script/start.sh
        command: /bin/sh /cfs/script/start.sh ecnode1.json
        restart: on-failure
        privileged: true
        environment:
            - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.52

    ecnode3:
        image: chubaofs/cfs-base:1.4
        ports:
            - "17510"
            - "17520"
            - "17530"
            - "17540"
            - 9500
        volumes:
            - ${DiskPath:-./docker_data}/ecnode3/disk:/cfs/disk
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/ecnode3/log:/cfs/log
            - ./conf/ecnode2.json:/cfs/conf/ecnode2.json
            - ./script/start_ecnode.sh:/cfs/script/start.sh
        command: /bin/sh /cfs/script/start.sh ecnode2.json
        restart: on-failure
        privileged: true
        environment:
            - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.53

    ecnode4:
        image: chubaofs/cfs-base:1.4
        ports:
            - "17510"
            - "17520"
            - "17530"
            - "17540"
            - 9500
        volumes:
            - ${DiskPath:-./docker_data}/ecnode4/disk:/cfs/disk
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/ecnode4/log:/cfs/log
            - ./conf/ecnode2.json:/cfs/conf/ecnode2.json
            - ./script/start_ecnode.sh:/cfs/script/start.sh
        command: /bin/sh /cfs/script/start.sh ecnode2.json
        restart: on-failure
        privileged: true
        environment:
            - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.54

    ecnode5:
        image: chubaofs/cfs-base:1.4
        ports:
            - "17510"
            - "17520"
            - "17530"
            - "17540"
            - 9500
        volumes:
            - ${DiskPath:-./docker_data}/ecnode5/disk:/cfs/disk
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/ecnode5/log:/cfs/log
            - ./conf/ecnode3.json:/cfs/conf/ecnode3.json
            - ./script/start_ecnode.sh:/cfs/script/start.sh
        command: /bin/sh /cfs/script/start.sh ecnode3.json
        restart: on-failure
        privileged: true
        environment:
            - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.55

    ecnode6:
        image: chubaofs/cfs-base:1.4
        ports:
            - "17510"
            - "17520"
            - "17530"
            - "17540"
            - 9500
        volumes:
            - ${DiskPath:-./docker_data}/ecnode6/disk:/cfs/disk
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/ecnode6/log:/cfs/log
            - ./conf/ecnode3.json:/cfs/conf/ecnode3.json
            - ./script/start_ecnode.sh:/cfs/script/start.sh
        command: /bin/sh /cfs/script/start.sh ecnode3.json
        restart: on-failure
        privileged: true
        environment:
            - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.56

    ecnode7:
        image: chubaofs/cfs-base:1.4
        ports:
            - "17510"
            - "17520"
            - "17530"
            - "17540"
            - 9500
        volumes:
            - ${DiskPath:-./docker_data}/ecnode7/disk:/cfs/disk
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/ecnode7/log:/cfs/log
            - ./conf/ecnode1.json:/cfs/conf/ecnode1.json
            - ./script/start_ecnode.sh:/cfs/script/start.sh
        command: /bin/sh /cfs/script/start.sh ecnode1.json
        restart: on-failure
        privileged: true
        environment:
            - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.57

    codecnode1:
        image: chubaofs/cfs-base:1.4
        ports:
            - "80"
            - 9500
        volumes:
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/codecnode1/log:/cfs/log
            - ./conf/codecnode.json:/cfs/conf/codecnode.json
            - ./script/start_codecnode.sh:/cfs/script/start.sh
        command: /bin/sh /cfs/script/start.sh
        restart: on-failure
        privileged: true
        environment:
            - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.61

    codecnode2:
        image: chubaofs/cfs-base:1.4
        ports:
            - "80"
            - 9500
        volumes:
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/codecnode2/log:/cfs/log
            - ./conf/codecnode.json:/cfs/conf/codecnode.json
            - ./script/start_codecnode.sh:/cfs/script/start.sh
        command: /bin/sh /cfs/script/start.sh
        restart: on-failure
        privileged: true
        environment:
            - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.62

    codecnode3:
        image: chubaofs/cfs-base:1.4
        ports:
            - "80"
            - 9500
        volumes:
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/codecnode3/log:/cfs/log
            - ./conf/codecnode.json:/cfs/conf/codecnode.json
            - ./script/start_codecnode.sh:/cfs/script/start.sh
        command: /bin/sh /cfs/script/start.sh
        restart: on-failure
        privileged: true
        environment:
            - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.63

    objectnode1:
        image: chubaofs/cfs-base:1.4
        ports:
            - "80"
            - 9500
        volumes:
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/objectnode1/log:/cfs/log
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage 
            - ./conf/objectnode.json:/cfs/conf/objectnode.json
            - ./script/start_objectnode.sh:/cfs/script/start.sh
            - ./conf/hosts:/etc/hosts:ro
        command: /cfs/bin/cfs-server -f -c /cfs/conf/objectnode.json
        restart: on-failure
        privileged: true
        environment:
          - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.41

    objectnode2:
        image: chubaofs/cfs-base:1.4
        ports:
            - "80"
            - 9500
        volumes:
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/objectnode2/log:/cfs/log
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage 
            - ./conf/objectnode.json:/cfs/conf/objectnode.json
            - ./script/start_objectnode.sh:/cfs/script/start.sh
            - ./conf/hosts:/etc/hosts:ro
        command: /cfs/bin/cfs-server -f -c /cfs/conf/objectnode.json
        restart: on-failure
        privileged: true
        environment:
          - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.42

    objectnode3:
        image: chubaofs/cfs-base:1.4
        ports:
            - "80"
            - 9500
        volumes:
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/objectnode3/log:/cfs/log
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage 
            - ./conf/objectnode.json:/cfs/conf/objectnode.json
            - ./script/start_objectnode.sh:/cfs/script/start.sh
            - ./conf/hosts:/etc/hosts:ro
        command: /cfs/bin/cfs-server -f -c /cfs/conf/objectnode.json
        restart: on-failure
        privileged: true
        environment:
          - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.43

    monitornode1:
        image: chubaofs/cfs-base:1.4
        ports:
            - "81"
            - 9500
        volumes:
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/monitornode1/log:/cfs/log
            - ./conf/monitornode.json:/cfs/conf/monitornode.json
            - ./script/start_monitornode.sh:/cfs/script/start.sh
        command: /cfs/bin/cfs-server -f -c /cfs/conf/monitornode.json
        restart: on-failure
        privileged: true
        environment:
            - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.71

    monitornode2:
        image: chubaofs/cfs-base:1.4
        ports:
            - "81"
            - 9500
        volumes:
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/monitornode2/log:/cfs/log
            - ./conf/monitornode.json:/cfs/conf/monitornode.json
            - ./script/start_monitornode.sh:/cfs/script/start.sh
        command: /cfs/bin/cfs-server -f -c /cfs/conf/monitornode.json
        restart: on-failure
        privileged: true
        environment:
            - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.72

    monitornode3:
        image: chubaofs/cfs-base:1.4
        ports:
            - "81"
            - 9500
        volumes:
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/monitornode3/log:/cfs/log
            - ./conf/monitornode.json:/cfs/conf/monitornode.json
            - ./script/start_monitornode.sh:/cfs/script/start.sh
        command: /cfs/bin/cfs-server -f -c /cfs/conf/monitornode.json
        restart: on-failure
        privileged: true
        environment:
            - TZ=Asia/Shanghai
        networks:
            extnetwork:
                ipv4_address: 192.168.0.73

    console1:
        image: chubaofs/cfs-base:1.4
        ports:
          - "80"
        volumes:
          - ./bin:/cfs/bin:ro
          - ${DiskPath:-./docker_data}/console/log:/cfs/log
          - ./conf/console.json:/cfs/conf/console.json
          - ./script/start_console.sh:/cfs/script/start.sh
        command: /cfs/bin/cfs-server -f -c /cfs/conf/console.json
        restart: on-failure
        privileged: true
        networks:
          extnetwork:
            ipv4_address: 192.168.0.50

    client:
        image: chubaofs/cfs-runtime-alter:1.0
        ports:
            - 9500
        volumes:
            - ./bin:/cfs/bin:rw
            - ./bin/cfs-client-inner:/usr/lib64/cfs-client-inner:ro
            - ./bin/libcfssdk.so:/usr/lib64/libcfssdk.so:ro
            - ./bin/libcfsc.so:/usr/lib64/libcfsc.so:ro
            - ./bin/libcfsclient.so:/usr/lib64/libcfsclient.so:ro
            - ./bin/libempty.so:/usr/lib64/libempty.so:ro
            - ./bin/libstd.so:/usr/lib64/libstd.so:ro
            - ./conf/hosts:/etc/hosts:ro
            - ./conf/client.json:/cfs/conf/client.json
            - ./conf/bypass.ini:/usr/lib64/bypass.ini:ro
            - ./conf/task.json:/cfs/conf/task.json
            - ./conf/repair_server.json:/cfs/conf/repair_server.json
            - ${DiskPath:-./docker_data}/client/log:/cfs/log
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage
            - ./script/run_test.sh:/cfs/script/start.sh
            - ./script/start_client.sh:/cfs/script/start_client.sh
            - ./ltp/runtest/fs:/opt/ltp/runtest/fs
            - ./s3tests:/opt/s3tests:ro
            - ../:/go/src/github.com/cubefs/cubefs
        privileged: true
        devices:
            - /dev/fuse:/dev/fuse:rwm
        cap_add:
            - SYS_ADMIN
        command: /bin/bash /cfs/script/start.sh
        networks:
            extnetwork:

    convert:
        image: chubaofs/cfs-base:1.4
        ports:
            - 8002
            - 7001
        volumes:
            - ./bin:/cfs/bin:ro
            - ${DiskPath:-./docker_data}/convert/log:/cfs/log
            - ./conf/convertnode.json:/cfs/conf/convertnode.json
            - ./script/start_convertnode.sh:/cfs/script/start.sh
        command: /cfs/bin/cfs-server -f -c /cfs/conf/convertnode.json
        restart: on-failure
        privileged: true
        networks:
            extnetwork:
                ipv4_address: 192.168.0.60

    consul:
        image: consul:1.5
        ports:
            - 8500:8500
        volumes:
            - ./monitor:/monitor
        privileged: true
        networks:
            extnetwork:
                ipv4_address: 192.168.0.101

    prometheus:
        image: prom/prometheus
        ports:
            - 9090:9090
        volumes:
            - ./monitor/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        privileged: true
        networks:
            extnetwork:
                ipv4_address: 192.168.0.102

    grafana:
        image: grafana/grafana:6.4.4
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=123456
        ports:
            - 3000:3000
        volumes:
            - ./monitor/grafana/grafana.ini:/etc/grafana/grafna.ini
            - ./monitor/grafana/provisioning:/etc/grafana/provisioning
            - ./monitor/grafana/init.sh:/grafana/init.sh
        privileged: true
        #command: /bin/bash
        networks:
            extnetwork:
                ipv4_address: 192.168.0.103

    nginx:
        image: nginx:1.17.8
        ports:
            - "80:80"
        volumes:
            - ./conf/nginx.conf:/etc/nginx/nginx.conf:ro
        command: /bin/bash -c "nginx -g 'daemon off;'"
        restart: on-failure
        privileged: true
        networks:
            extnetwork:
                ipv4_address: 192.168.0.104

    build:
        image: chubaofs/cfs-runtime-alter:1.0
        volumes:
            - ../:/go/src/github.com/cubefs/cubefs
        command:
            /bin/bash /go/src/github.com/cubefs/cubefs/docker/script/build.sh
        networks:
            extnetwork:

    build_test:
        image: chubaofs/cfs-runtime-alter:1.0
        volumes:
            - ../:/go/src/github.com/cubefs/cubefs
        command:
            /bin/bash /go/src/github.com/cubefs/cubefs/docker/script/build.sh test
        networks:
            extnetwork:


    unit_test:
        image: chubaofs/cfs-base:1.4
        volumes:
            - ../:/go/src/github.com/cubefs/cubefs
            - ${DiskPath:-./docker_data}/coverage:/cfs/coverage
        command:
            - bash
            - "-c"
            - >-
                set -e;
                mkdir -p /go/src/github.com/cubefs/cubefs/docker/bin &&
                cd /go/src/github.com/cubefs/cubefs && make test
        networks:
            extnetwork:

    cover_analyze:
        image: chubaofs/cfs-base:1.4
        volumes:
            - ./script/analyze.py:/cfs/script/analyze.py:ro
            - ../:/go/src/github.com/cubefs/cubefs
            - ./docker_data/coverage:/cfs/coverage
        command: python3 /cfs/script/analyze.py

        networks:
            extnetwork:
